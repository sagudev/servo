name: Windows workflow

on:
  workflow_call:
    inputs:
      layout:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      layout:
        required: true
        type: choice
        options: ["2013", "2020"]
  push:
    branches: ["try-windows"]

env:
  RUST_BACKTRACE: 1
  SHELL: /bin/bash
  SCCACHE_GHA_ENABLED: "true"
  #RUSTC_WRAPPER: "sccache"
  CCACHE: "sccache"
  CARGO_INCREMENTAL: 0
  LAYOUT: "${{ contains(inputs.layout, '2020') && 'layout-2020' || 'layout-2013' }}"

jobs:
  build-win:
    name: Build
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Copy to C drive
        run: cp D:\a C:\ -Recurse
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.2
        with:
          version: "v0.4.0"
      - name: Bootstrap
        working-directory: "C:\\a\\${{ github.event.repository.name }}\\${{ github.event.repository.name }}"
        run: |
          python -m pip install --upgrade pip virtualenv
          python mach fetch
      - name: Release build
        working-directory: "C:\\a\\${{ github.event.repository.name }}\\${{ github.event.repository.name }}"
        run: python mach build --release --media-stack=dummy --with-${{ env.LAYOUT }}
      - name: Unit tests
        working-directory: "C:\\a\\${{ github.event.repository.name }}\\${{ github.event.repository.name }}"
        run: python mach test-unit --release --with-${{ env.LAYOUT }}
      - name: Smoketest
        working-directory: "C:\\a\\${{ github.event.repository.name }}\\${{ github.event.repository.name }}"
        run: python mach smoketest --angle

  build_result:
    name: homu build finished
    runs-on: ubuntu-latest
    if: always()
    # needs all build to detect cancellation
    needs:
      - "build-win"

    steps:
      - name: Mark the job as successful
        run: exit 0
        if: "!contains(join(needs.*.result, ','), 'failure') && !contains(join(needs.*.result, ','), 'cancelled')"
      - name: Mark the job as unsuccessful
        run: exit 1
        if: contains(join(needs.*.result, ','), 'failure') || contains(join(needs.*.result, ','), 'cancelled')
