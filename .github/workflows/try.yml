name: Try

on:
  pull_request_target:
    types: [labeled]
  workflow_dispatch:
    inputs:
      try_string:
        type: string
        required: true

jobs:
  parse-comment:
    name: Trigger Try
    runs-on: ubuntu-latest
    concurrency:
      group: try-${{ github.event.number }}
    outputs:
      configuration: ${{ steps.configuration.outputs.result }}
      try_string: ${{ steps.try_string.outputs.result }}
    steps:
      - name: Get Try string
        uses: actions/github-script@v6
        id: try_string
        with:
          script: |
            function makeComment(body) {
                console.log(body);
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body
                })
            }

            let try_string = ""

            if (context.eventName == "pull_request_target") {
              for (const label of context.payload.pull_request.labels) {
                if (!label.name.startsWith("T-")) {
                  continue;
                }

                // Try to remove the label. If that fails, it's likely that another
                // workflow has already processed it or a user has removed it.
                try {
                  await github.rest.issues.removeLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    name: label.name,
                  });
                } catch (exception) {
                  console.log("Assuming '" + label.name + "' is already removed: " + exception);
                  continue;
                }

                console.log("Found label: " + label.name);
                try_string += " " + label.name.slice(2); // "T-" removed
              }
            }

            console.log(try_string);

            let username = context.payload.sender.login;
            let result = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username
            });
            if (!result.data.user.permissions.push) {
              makeComment('üîí User @' + username + ' does not have permission to trigger try jobs.');
              return "";
            }

            const url = context.serverUrl +
              "/" + context.repo.owner +
              "/" + context.repo.repo +
              "/actions/runs/" + context.runId;
            const formattedURL = "[#" + context.runId + "](" + url + ")";
            makeComment("üî® Triggering try run (" + formattedURL + ")");

            return try_string;
      # TODO: download try_parser manually
      - uses: actions/checkout@v3
        if: github.event_name != 'issue_comment' && github.event_name != 'pull_request_target'
        with:
          fetch-depth: 2
      # This is necessary to checkout the pull request if this run was triggered
      # via an `issue_comment` action on a pull request.
      - uses: actions/checkout@v3
        if: github.event_name == 'issue_comment' || github.event_name == 'pull_request_target'
        with:
          ref: refs/pull/${{ github.event.issue.number || github.event.number }}/head
          fetch-depth: 2
      - name: Parse Try string
        if: ${{ steps.try_string.outputs.result }}
        id: configuration
        run: |
          out=$(python ./etc/try_parser.py ${{ steps.try_string.outputs.result }})
          echo "result=${out}" >> $GITHUB_OUTPUT

  # we cannot call main.yml because we hit workflow neesting limit
  build:
    needs: ["parse-comment"]
    name: ${{ matrix.name }}
    strategy:
      fail-fast: ${{ fromJson(needs.parse-comment.outputs.configuration).fail_fast }}
      matrix:
        include: ${{ fromJson(needs.parse-comment.outputs.configuration).matrix }}
    # we need dipatch os because workflows do not support uses: ${}
    uses: ./.github/workflows/dispatch-os.yml
    secrets: inherit
    with:
      os: ${{ matrix.os }}
      wpt-layout: ${{ matrix.layout }}
      profile: ${{ matrix.profile }}
      unit-tests: ${{ matrix.unit_tests }}

  results:
    name: Results
    needs: ["parse-comment", "build"]
    runs-on: ubuntu-latest
    if: ${{ always() && needs.parse-comment.outputs.try_string }}
    steps:
      - name: Success
        if: ${{ !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
        uses: actions/github-script@v6
        with:
          script: |
              const url = context.serverUrl +
                "/" + context.repo.owner +
                "/" + context.repo.repo +
                "/actions/runs/" + context.runId;
              const formattedURL = "[#" + context.runId + "](" + url + ")";
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "‚ú® Try run (" + formattedURL + ") " + "succeeded.",
              });
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        uses: actions/github-script@v6
        with:
          script: |
              const url = context.serverUrl +
                "/" + context.repo.owner +
                "/" + context.repo.repo +
                "/actions/runs/" + context.runId;
              const formattedURL = "[#" + context.runId + "](" + url + ")";
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "‚ö†Ô∏è Try run (" + formattedURL + ") " + "failed.",
              });


